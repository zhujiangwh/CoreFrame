<?xml version="1.0" encoding="utf-8" ?>
<configuration>

  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,  log4net-net-1.0" />
  </configSections>

  <log4net>
    <!--定义输出到文件中-->
    <appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--定义文件存放位置-->
      <file value="log\log" />
      <param name="StaticLogFileName" value="false" />
      <param name="RollingStyle" value="Date" />
      <param name="DatePattern" value="yyyyMMdd/yyyyMMdd&quot;-TimerServer.log&quot;" />
      <appendToFile value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <!--每条日志末尾的文字说明-->
        <param name="Header" value="" />
        <param name="Footer" value="" />
        <conversionPattern value="%n******************************jzt.log.start*************************%n记录时间：%date 线程ID:[%thread] 日志级别：%-5level 记录类：%logger 记录位置：%location 消息描述：%message%n**************************jzt.log.end*****************************%n" />
      </layout>
    </appender>

    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="[时间]:%d%n[级别]:%p%n[内容]:%m%n%n"></conversionPattern>
      </layout>
    </appender>

    <appender name="SmtpAppender" type="log4net.Appender.SmtpAppender">
      <to value="zhujiang.wh@gmail.com" />
      <cc value="" />
      <from value="187219947@qq.com" />
      <username value="187219947" />
      <password value="ZhuJdLiW" />
      <subject value="邮件标题" />
      <smtpHost value="smtp.qq.com" />

      <!-- 
     也就是 发送邮件的时候， 顺便发送 异常日志的 前5个日志信息（包含异常的日志）  
  这样做的目的是 便于观察， 是什么原因，导致了 异常的发生.
  这个值好像 默认是 512.
   -->
      <bufferSize value="5" />


      <lossy value="true" />
      <!-- 下面的定义， 就是 日志级别 大于 WARN 的， 才发邮件.  -->
      <evaluator type="log4net.Core.LevelEvaluator">
        <threshold value="WARN"/>
      </evaluator>


      <!-- 下面是 定义邮件的格式 （好多换行啊） -->
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%property{log4net:HostName} :: %level :: %message %newlineLogger: %logger%newlineThread: %thread%newlineDate: %date%newlineNDC: %property{NDC}%newline%newline" />
      </layout>

    </appender>

    <!--定义日志的输出媒介，下面定义日志以四种方式输出。也可以下面的按照一种类型或其他类型输出。-->
    <root>
      <level value="ERROR" />
      <!--文件形式记录日志-->
      <appender-ref ref="LogFileAppender" />
      <appender-ref ref="ConsoleAppender" />

    </root>

  </log4net>



  <system.runtime.remoting>
    <application>

      <service>
        <!--注册服务/-->
        <wellknown mode="Singleton" type="JZT.Common.RegisterService.RegisterManager, JZT.Common" objectUri="RegisterService"/>
        <wellknown mode="SingleCall" type="JZT.GOS.CCERP.CCERPService , JZT.GOS.CCERP.BLL" objectUri="CCERPService"/>

        <wellknown mode="SingleCall" type=" Core.Server.CommonObjectService  , Core.Server " objectUri="CommonObjectService"/>
        <wellknown mode="SingleCall" type=" Core.Server.ArchitectureService  , Core.Server " objectUri="ArchitectureService"/>
        
        <wellknown mode="SingleCall" type=" Core.SelectObjectService  , Core.Server " objectUri="SelectObjectService"/>
        <wellknown mode="SingleCall" type=" Core.EntityService  , Core.Server " objectUri="EntityService"/>

        <wellknown mode="SingleCall" type=" Core.Authority.AuthorityService  , Core.Server " objectUri="AuthorityService"/>



      </service>

      <channels>
        <channel ref="tcp" port="8545" name="TcpServerChannel">
          <clientProviders>
            <formatter ref="binary"/>
            <!--<provider ref="ClientMessageProvider"/>-->
          </clientProviders>
          <serverProviders>
            <formatter ref="binary" typeFilterLevel="Full"/>
            <!--<provider ref="ServerBusinessProvider"/>-->
          </serverProviders>
        </channel>
      </channels>
    </application>

    <!--<channelSinkProviders>
      <clientProviders>
        <provider id="ClientMessageProvider" type="JZT.DevStudio.Server.SecurityClientChannelSinkProvider,JZT.DevStudio.Server"/>
      </clientProviders>
      <serverProviders>
        <provider id="ServerBusinessProvider" type="JZT.DevStudio.Server.SecurityServerChannelSinkProvider,JZT.DevStudio.Server"/>
      </serverProviders>
    </channelSinkProviders>-->
    <lifetime leaseTime="7M" sponsorshipTimeout="7M" renewOnCallTime="7M"/>
    <customErrors mode="Off"/>
  </system.runtime.remoting>

</configuration>