//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.17929 版自动生成。
// 
#pragma warning disable 1591

namespace JZT.Utility.WS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MainServicesSoap", Namespace="http://tempuri.org/")]
    public partial class MainServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback massSendCcdxOperationCompleted;
        
        private System.Threading.SendOrPostCallback massSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback massSendExOperationCompleted;
        
        private System.Threading.SendOrPostCallback readSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback readXmlSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePwdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MainServices() {
            this.Url = global::JZT.Utility.Properties.Settings.Default.JZT_Utility_WS_MainServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event massSendCcdxCompletedEventHandler massSendCcdxCompleted;
        
        /// <remarks/>
        public event massSendCompletedEventHandler massSendCompleted;
        
        /// <remarks/>
        public event massSendExCompletedEventHandler massSendExCompleted;
        
        /// <remarks/>
        public event readSmsCompletedEventHandler readSmsCompleted;
        
        /// <remarks/>
        public event readXmlSmsCompletedEventHandler readXmlSmsCompleted;
        
        /// <remarks/>
        public event getFeeCompletedEventHandler getFeeCompleted;
        
        /// <remarks/>
        public event changePwdCompletedEventHandler changePwdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/massSendCcdx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string massSendCcdx(string sName, string sPwd, string sDst, string sMsg, string sTime, string sExNo, string smsType) {
            object[] results = this.Invoke("massSendCcdx", new object[] {
                        sName,
                        sPwd,
                        sDst,
                        sMsg,
                        sTime,
                        sExNo,
                        smsType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void massSendCcdxAsync(string sName, string sPwd, string sDst, string sMsg, string sTime, string sExNo, string smsType) {
            this.massSendCcdxAsync(sName, sPwd, sDst, sMsg, sTime, sExNo, smsType, null);
        }
        
        /// <remarks/>
        public void massSendCcdxAsync(string sName, string sPwd, string sDst, string sMsg, string sTime, string sExNo, string smsType, object userState) {
            if ((this.massSendCcdxOperationCompleted == null)) {
                this.massSendCcdxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmassSendCcdxOperationCompleted);
            }
            this.InvokeAsync("massSendCcdx", new object[] {
                        sName,
                        sPwd,
                        sDst,
                        sMsg,
                        sTime,
                        sExNo,
                        smsType}, this.massSendCcdxOperationCompleted, userState);
        }
        
        private void OnmassSendCcdxOperationCompleted(object arg) {
            if ((this.massSendCcdxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.massSendCcdxCompleted(this, new massSendCcdxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/massSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string massSend(string sName, string sPwd, string sDst, string sMsg, string sTime, string sExNo) {
            object[] results = this.Invoke("massSend", new object[] {
                        sName,
                        sPwd,
                        sDst,
                        sMsg,
                        sTime,
                        sExNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void massSendAsync(string sName, string sPwd, string sDst, string sMsg, string sTime, string sExNo) {
            this.massSendAsync(sName, sPwd, sDst, sMsg, sTime, sExNo, null);
        }
        
        /// <remarks/>
        public void massSendAsync(string sName, string sPwd, string sDst, string sMsg, string sTime, string sExNo, object userState) {
            if ((this.massSendOperationCompleted == null)) {
                this.massSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmassSendOperationCompleted);
            }
            this.InvokeAsync("massSend", new object[] {
                        sName,
                        sPwd,
                        sDst,
                        sMsg,
                        sTime,
                        sExNo}, this.massSendOperationCompleted, userState);
        }
        
        private void OnmassSendOperationCompleted(object arg) {
            if ((this.massSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.massSendCompleted(this, new massSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/massSendEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string massSendEx(string sName, string sPwd, string sDst, string sMsg, string sTime, string sExNo, bool bWappush) {
            object[] results = this.Invoke("massSendEx", new object[] {
                        sName,
                        sPwd,
                        sDst,
                        sMsg,
                        sTime,
                        sExNo,
                        bWappush});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void massSendExAsync(string sName, string sPwd, string sDst, string sMsg, string sTime, string sExNo, bool bWappush) {
            this.massSendExAsync(sName, sPwd, sDst, sMsg, sTime, sExNo, bWappush, null);
        }
        
        /// <remarks/>
        public void massSendExAsync(string sName, string sPwd, string sDst, string sMsg, string sTime, string sExNo, bool bWappush, object userState) {
            if ((this.massSendExOperationCompleted == null)) {
                this.massSendExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmassSendExOperationCompleted);
            }
            this.InvokeAsync("massSendEx", new object[] {
                        sName,
                        sPwd,
                        sDst,
                        sMsg,
                        sTime,
                        sExNo,
                        bWappush}, this.massSendExOperationCompleted, userState);
        }
        
        private void OnmassSendExOperationCompleted(object arg) {
            if ((this.massSendExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.massSendExCompleted(this, new massSendExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/readSms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string readSms(string sName, string sPwd) {
            object[] results = this.Invoke("readSms", new object[] {
                        sName,
                        sPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void readSmsAsync(string sName, string sPwd) {
            this.readSmsAsync(sName, sPwd, null);
        }
        
        /// <remarks/>
        public void readSmsAsync(string sName, string sPwd, object userState) {
            if ((this.readSmsOperationCompleted == null)) {
                this.readSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreadSmsOperationCompleted);
            }
            this.InvokeAsync("readSms", new object[] {
                        sName,
                        sPwd}, this.readSmsOperationCompleted, userState);
        }
        
        private void OnreadSmsOperationCompleted(object arg) {
            if ((this.readSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.readSmsCompleted(this, new readSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/readXmlSms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string readXmlSms(string sName, string sPwd, string sPosID) {
            object[] results = this.Invoke("readXmlSms", new object[] {
                        sName,
                        sPwd,
                        sPosID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void readXmlSmsAsync(string sName, string sPwd, string sPosID) {
            this.readXmlSmsAsync(sName, sPwd, sPosID, null);
        }
        
        /// <remarks/>
        public void readXmlSmsAsync(string sName, string sPwd, string sPosID, object userState) {
            if ((this.readXmlSmsOperationCompleted == null)) {
                this.readXmlSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreadXmlSmsOperationCompleted);
            }
            this.InvokeAsync("readXmlSms", new object[] {
                        sName,
                        sPwd,
                        sPosID}, this.readXmlSmsOperationCompleted, userState);
        }
        
        private void OnreadXmlSmsOperationCompleted(object arg) {
            if ((this.readXmlSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.readXmlSmsCompleted(this, new readXmlSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getFee(string sName, string sPwd) {
            object[] results = this.Invoke("getFee", new object[] {
                        sName,
                        sPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFeeAsync(string sName, string sPwd) {
            this.getFeeAsync(sName, sPwd, null);
        }
        
        /// <remarks/>
        public void getFeeAsync(string sName, string sPwd, object userState) {
            if ((this.getFeeOperationCompleted == null)) {
                this.getFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFeeOperationCompleted);
            }
            this.InvokeAsync("getFee", new object[] {
                        sName,
                        sPwd}, this.getFeeOperationCompleted, userState);
        }
        
        private void OngetFeeOperationCompleted(object arg) {
            if ((this.getFeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFeeCompleted(this, new getFeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/changePwd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string changePwd(string sName, string sPwd, string sNewPwd) {
            object[] results = this.Invoke("changePwd", new object[] {
                        sName,
                        sPwd,
                        sNewPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void changePwdAsync(string sName, string sPwd, string sNewPwd) {
            this.changePwdAsync(sName, sPwd, sNewPwd, null);
        }
        
        /// <remarks/>
        public void changePwdAsync(string sName, string sPwd, string sNewPwd, object userState) {
            if ((this.changePwdOperationCompleted == null)) {
                this.changePwdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePwdOperationCompleted);
            }
            this.InvokeAsync("changePwd", new object[] {
                        sName,
                        sPwd,
                        sNewPwd}, this.changePwdOperationCompleted, userState);
        }
        
        private void OnchangePwdOperationCompleted(object arg) {
            if ((this.changePwdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePwdCompleted(this, new changePwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void massSendCcdxCompletedEventHandler(object sender, massSendCcdxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class massSendCcdxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal massSendCcdxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void massSendCompletedEventHandler(object sender, massSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class massSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal massSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void massSendExCompletedEventHandler(object sender, massSendExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class massSendExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal massSendExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void readSmsCompletedEventHandler(object sender, readSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class readSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal readSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void readXmlSmsCompletedEventHandler(object sender, readXmlSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class readXmlSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal readXmlSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getFeeCompletedEventHandler(object sender, getFeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void changePwdCompletedEventHandler(object sender, changePwdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changePwdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changePwdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591